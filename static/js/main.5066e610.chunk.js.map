{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/Countrypicker/Countrypicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/Countrypicker/Countrypicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","variant","start","end","value","duration","separator","Date","toDateString","deceased","url","fetchData","country","a","changeableurl","axios","get","dailySummary","console","log","fetchDailyData","modifiedData","map","dailydata","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","linechart","length","labels","datasets","label","borderColor","fill","backgroundColor","barchart","options","legend","display","title","text","Countrypicker","handlecountrychange","countrieslist","setCountriesList","FormControl","formControl","NativeSelect","defaultValue","onChange","event","target","i","key","App","state","fetcheddata","setState","fetchedData","this","image","src","coronaimage","alt","React","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.5066e610.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3a6Qz\",\"card\":\"Cards_card__ELBmG\",\"infected\":\"Cards_infected__2SF7B\",\"recovered\":\"Cards_recovered__JSz0s\",\"deceased\":\"Cards_deceased__2S-Ol\"};","import React from \"react\";\r\nimport {Card, CardContent,Typography,Grid } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\"; \r\nimport styles from \"./Cards.module.css\";\r\nimport cx from \"classnames\";\r\nconst Cards = ( {  data :{confirmed, recovered, deaths, lastUpdate}}) =>{\r\n    if(!confirmed)\r\n    {\r\n    return \"loading...\";\r\n    }\r\n    return <div className={styles.container}>\r\n    { <Grid container spacing={7} justify=\"center\">\r\n    <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n        <CardContent>\r\n            <Typography color=\"textSecondary\" >Infected</Typography>\r\n            <Typography variant=\"h5\" >\r\n                <CountUp  start={0}  end={confirmed.value} duration={2.5}  separator=\",\"\r\n                />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()} </Typography>\r\n            <Typography variant=\"body2\">Number of active cases of COVID cases</Typography>\r\n        </CardContent>\r\n    </Grid>\r\n    <Grid item component={Card}  xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n        <CardContent>\r\n            <Typography color=\"textSecondary\" >Recovered</Typography>\r\n            <Typography variant=\"h5\" >\r\n                <CountUp  start={0}  end={recovered.value} duration={2.5}  separator=\",\"\r\n                />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()} </Typography>\r\n            <Typography variant=\"body2\">Number of recovered cases of COVID cases</Typography>\r\n        </CardContent>\r\n    </Grid>\r\n    <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deceased)}>\r\n        <CardContent>\r\n            <Typography color=\"textSecondary\" >Deaths</Typography>\r\n            <Typography variant=\"h5\" >\r\n                <CountUp  start={0}  end={deaths.value} duration={2.5}  separator=\",\"\r\n                />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()} </Typography>\r\n            <Typography variant=\"body2\">Number of deaths of COVID cases</Typography>\r\n        </CardContent>\r\n    </Grid> \r\n  </Grid>}\r\n    </div>\r\n}\r\nexport default Cards;","import axios from \"axios\";\r\n\r\nconst url=\"https://covid19.mathdro.id/api\";\r\n\r\n export const fetchData= async(country) =>{\r\n     let changeableurl=url;\r\n     if(country)\r\n     changeableurl=`${url}/countries/${country}`;\r\n  try{\r\n const {data:{confirmed,recovered,deaths,dailySummary,lastUpdate}}=await axios.get(changeableurl);\r\n return {confirmed,recovered,deaths,dailySummary,lastUpdate};\r\n}\r\ncatch(error){\r\n    console.log(error);\r\n}\r\n}\r\nexport const fetchDailyData= async() =>{\r\n    try{\r\n   const {data}=await axios.get(`${url}/daily`);\r\n   const modifiedData=data.map((dailydata)=>({\r\n       confirmed:dailydata.confirmed.total,\r\n       deaths:dailydata.deaths.total,\r\n       date:dailydata.reportDate,\r\n   }));\r\n   return modifiedData;\r\n  }\r\n  catch(error){\r\n   console.log(error);\r\n    }}\r\n  export const fetchCountries=async() =>{\r\n      try{\r\n          const {data:{countries}}=await axios.get(`${url}/countries`);\r\n         return countries.map((country)=>\r\n             country.name);\r\n      }\r\n      catch(error){\r\n   console.log(error);\r\n      }\r\n  }","import React, {useState,useEffect} from \"react\";\r\nimport {fetchDailyData} from \"../../api\";\r\nimport {Line,Bar} from \"react-chartjs-2\";\r\nimport styles from \"./Chart.module.css\";\r\nconst Chart=({data:{confirmed,recovered,deaths},country})=>{\r\n    const [dailydata,setDailyData]=useState([]);\r\n    useEffect(()=>{\r\n        const fetchAPI= async()=>{\r\n        setDailyData(await fetchDailyData());\r\n        }\r\n        fetchAPI();\r\n    });\r\n    const linechart=(\r\n        dailydata.length\r\n        ?\r\n       ( <Line \r\n        data={{\r\n         labels:dailydata.map(({date})=>date),\r\n         datasets:[{\r\n             data:dailydata.map(({confirmed})=>confirmed),\r\n             label:'Infected',\r\n             borderColor:\"#3333ff\",\r\n             fill:true,\r\n         },{\r\n            data:dailydata.map(({deaths})=>deaths),\r\n            label:\"Deaths\",\r\n            borderColor:\"red\",\r\n            backgroundColor:\"rgba(255,0,0,0.5)\",\r\n            fill:true,\r\n         }],\r\n        }}\r\n        />):null\r\n    );\r\n    const barchart=(\r\n        confirmed?(\r\n            <Bar\r\n            data={{\r\n                labels:['Infected','Recovered','Deaths'],\r\n                datasets:[{\r\n                    label:'people',\r\n                    backgroundColor:['rgba(0,0,255,0.5)','rgba(0,255,0,0.5)','rgba(255,0,0,0.5)'],\r\n                    data:[confirmed.value,recovered.value,deaths.value],\r\n                }],\r\n\r\n            }}\r\n            options={{\r\n                legend:{display:false},\r\n                title:{display:true,text:`current state in ${country}`},\r\n            }}\r\n            />\r\n            \r\n        ):null\r\n    );\r\n    return (\r\n        <div className={styles.container}>\r\n        {country?barchart:linechart}\r\n        </div>\r\n    )\r\n}\r\nexport default Chart;\r\n","import React,{useState,useEffect} from \"react\";\r\nimport {FormControl,NativeSelect} from \"@material-ui/core\";\r\nimport styles from \"./Countrypicker.module.css\";\r\nimport {fetchCountries} from \"../../api\";\r\nfunction Countrypicker({handlecountrychange}){\r\n    const [countrieslist,setCountriesList]=useState([]);\r\n    useEffect(()=>{\r\n   const fetchAPI=async()=>{\r\n       setCountriesList(await fetchCountries());\r\n   }\r\n   fetchAPI();\r\n    },[setCountriesList]);\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(event)=>handlecountrychange(event.target.value)}>\r\n                <option value=\"\">\r\n                    Global\r\n                </option>\r\n    {countrieslist.map((country,i)=> <option key={i} value={country}>{country}</option>)};\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\nexport default Countrypicker;","import React from \"react\";\r\nimport {Cards,Chart,Countrypicker} from \"./components\";\r\nimport styles from \"./App.module.css\";\r\nimport {fetchData} from \"./api\";\r\nimport coronaimage from \"./images/image.png\";\r\nclass App extends React.Component\r\n{\r\n    state={\r\n        data:{},\r\n        country:'',\r\n    }\r\n    async  componentDidMount(){\r\n        const fetchedData=await fetchData();\r\n        this.setState({data:fetchedData});\r\n    }\r\n    handlecountrychange =async(country)=>{\r\n        const fetcheddata=await fetchData(country);\r\n        this.setState({data:fetcheddata,country:country});\r\n    }\r\n   render(){\r\n    const {data,country}=this.state; \r\n    return (\r\n    <div className={styles.container}>\r\n        <img className={styles.image} src={coronaimage} alt=\"COVID-19\"/>\r\n   <Cards\r\n   data={data}\r\n   />\r\n   <Countrypicker handlecountrychange={this.handlecountrychange}/>\r\n   <Chart data={data}\r\n   country={country}/>\r\n   \r\n    </div>);\r\n   }\r\n}\r\nexport default App;","\r\nimport React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport App from \"./App\";\r\nReactDom.render(\r\n   <App/>\r\n,document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2XoyG\",\"image\":\"App_image__2---h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2U0UA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"Countrypicker_formControl__1S68P\",\"container\":\"Countrypicker_container__2x1HV\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}